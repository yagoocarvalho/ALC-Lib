using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;

namespace Lista5
{
    public class GaussianQuadrature
    {
        /// <summary>
        /// 
        /// </summary>
        /// <param name="f">Function to be integrated</param>
        /// <param name="a">Inferior Integration Limit</param>
        /// <param name="b">Superior Integration Limit</param>
        /// <param name="nIntegrationPoints">Number of integration points</param>
        /// <returns>The result</returns>
        public static double Solve (Functions.Function f, double a, double b, int nIntegrationPoints)
        {
            double   result = 0.0;
            double   L      = (b - a);

            double[,] weights = new double[,] {
                {2,         0,         0,         0,         0,         0,         0,         0,         0,         0        },
                {1,         1,         0,         0,         0,         0,         0,         0,         0,         0        },
                {0.8888888, 0.5555556, 0.5555556, 0,         0,         0,         0,         0,         0,         0        },
                {0.6521451, 0.6521451, 0.3478548, 0.3478548, 0,         0,         0,         0,         0,         0        },
                {0.5688889, 0.4786287, 0.4786287, 0.2369269, 0.2369269, 0,         0,         0,         0,         0        },
                {0.3607616, 0.3607616, 0.4679139, 0.4679139, 0.1713245, 0.1713245, 0,         0,         0,         0        },
                {0.4179592, 0.3818300, 0.3818300, 0.2797054, 0.2797054, 0.1294850, 0.1294850, 0,         0,         0        },
                {0.3626838, 0.3626838, 0.3137066, 0.3137066, 0.2223810, 0.2223810, 0.1012285, 0.1012285, 0,         0        },
                {0.3302393, 0.1806482, 0.1806482, 0.0812744, 0.0812744, 0.3123471, 0.3123471, 0.2606107, 0.2606107, 0        },
                {0.2955242, 0.2955242, 0.2692667, 0.2692667, 0.2190864, 0.2190864, 0.1494513, 0.1494513, 0.0666713, 0.0666713}
            };

            double[,] zi = new double[,] {
                {0, 0, 0, 0, 0, 0, 0, 0, 0, 0},
                {-0.5773502691896257, 0.5773502691896257, 0, 0, 0, 0, 0, 0, 0, 0},
                {0, -0.7745966692414834, 0.7745966692414834, 0, 0, 0, 0, 0, 0, 0},
                {-0.3399810435848563, 0.3399810435848563, -0.8611363115940526, 0.8611363115940526, 0, 0, 0, 0, 0, 0},
                {0, -0.5384693101056831, 0.5384693101056831, -0.9061798459386640, 0.9061798459386640, 0, 0, 0, 0, 0},
                {-0.6612093864662645, 0.6612093864662645, -0.2386191860831969, 0.2386191860831969, -0.9324695142031521,         0.9324695142031521, 0, 0, 0, 0},
                {0, -0.4058451513773972, 0.4058451513773972, -0.7415311855993945, 0.7415311855993945, -0.9491079123427585,          0.9491079123427585, 0, 0, 0},
                {-0.1834346424956498, 0.1834346424956498, -0.5255324099163290, 0.5255324099163290, -0.7966664774136267,     0.7966664774136267,    -0.9602898564975363, 0.9602898564975363, 0, 0},
                {0, -0.8360311073266358, 0.8360311073266358, -0.9681602395076261, 0.9681602395076261, -0.3242534234038089,          0.3242534234038089, -0.6133714327005904, 0.6133714327005904, 0},
                {-0.1488743389816312, 0.1488743389816312, -0.4333953941292472, 0.4333953941292472, -0.6794095682990244, 0.6794095682990244, -0.8650633666889845, 0.8650633666889845, -0.9739065285171717, 0.9739065285171717}
            };

            for (int i = 0; i < nIntegrationPoints; i++)
            {
                result += (L / 2.0) * (f (xi (a, b, L, zi[nIntegrationPoints - 1, i])) * weights[nIntegrationPoints - 1, i]);
            }

            return result;
        }

        private static double xi (double a, double b, double L, double z)
        {
            double result = ((1.0/2.0) * (a + b + (z * L)));
            return result;
        }
    }
}
